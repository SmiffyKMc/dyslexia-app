name: Build and Release Android APK

on:
  push:
    branches: [main]

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.1"  # Match local Flutter version
          channel: stable
          cache: true

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 35  # Match compileSdk 35
          target: google_apis

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Install Android SDK 35
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-35" "build-tools;35.0.0" || true

      - name: Verify environment
        run: |
          echo "Java version:"
          java -version
          echo "JAVA_HOME: $JAVA_HOME"
          echo "Android SDK: $ANDROID_HOME"
          echo "Flutter version:"
          flutter --version
          echo "Flutter doctor:"
          flutter doctor -v

      - name: Clean and get dependencies
        run: |
          flutter clean
          flutter pub get

      - name: Run Flutter analyze
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

      - name: Build release APK with Gradle compatibility
        run: |
          flutter build apk --release --verbose --no-tree-shake-icons
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false"

      - name: Verify APK was created
        run: |
          if [ -f build/app/outputs/flutter-apk/app-release.apk ]; then
            echo "✅ APK created successfully"
            ls -la build/app/outputs/flutter-apk/
          else
            echo "❌ APK not found"
            exit 1
          fi

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version:[ ]*//')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Building version: $VERSION"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.get_version.outputs.version }}"
          name: "Dyslexic AI v${{ steps.get_version.outputs.version }}"
          commit: ${{ github.sha }}
          artifacts: build/app/outputs/flutter-apk/app-release.apk
          artifactContentType: application/vnd.android.package-archive
          generateReleaseNotes: true
          body: |
            ## 🚀 Dyslexic AI Release v${{ steps.get_version.outputs.version }}
            
            ### What's New
            - Auto-generated from latest main branch
            - Built with Flutter ${{ env.FLUTTER_VERSION }}
            - Android APK for installation (SDK 35)
            
            ### Download
            📱 **Android**: Download the APK file below
            
            *Built on: ${{ github.event.head_commit.timestamp }}*
